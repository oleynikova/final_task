&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	МесяцРасчета = ТекущаяДатаСеанса();
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСтоимость(Команда)
	
	РассчитатьСтоимостьНаСервере(МесяцРасчета);	
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура РассчитатьСтоимостьНаСервере(МесяцРасчета)
	
	ДатаРасчета = ТекущаяДатаСеанса();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;

	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОстаткиТоваровОстаткиИОбороты.Регистратор КАК Регистратор,
	|	ОстаткиТоваровОстаткиИОбороты.Номенклатура,
	|	ОстаткиТоваровОстаткиИОбороты.КоличествоРасход
	|ПОМЕСТИТЬ РегистраторыСТоварами
	|ИЗ
	|	РегистрНакопления.ОстаткиТоваров.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Регистратор, , ) КАК ОстаткиТоваровОстаткиИОбороты
	|ГДЕ
	|	ОстаткиТоваровОстаткиИОбороты.КоличествоРасход <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РегистраторыСТоварами.Регистратор КАК Регистратор,
	|	РегистраторыСТоварами.Номенклатура,
	|	РегистраторыСТоварами.КоличествоРасход КАК Количество
	|ИЗ
	|	РегистраторыСТоварами КАК РегистраторыСТоварами
	|ИТОГИ ПО
	|	Регистратор";
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(МесяцРасчета));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(МесяцРасчета));
	
	РезультатПоРегистраторам = Запрос.Выполнить();
	Если РезультатПоРегистраторам.Пустой() Тогда 
		Возврат;
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СебестоимостьТовараОстатки.Номенклатура КАК Номенклатура,
	|	СебестоимостьТовараОстатки.Партия,
	|	СебестоимостьТовараОстатки.КоличествоОстаток,
	|	СебестоимостьТовараОстатки.СтоимостьОстаток
	|ИЗ
	|	РегистрНакопления.СебестоимостьТовара.Остатки(
	|			&КонецПериода,
	|			Номенклатура В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					РегистраторыСТоварами.Номенклатура
	|				ИЗ
	|					РегистраторыСТоварами КАК РегистраторыСТоварами)) КАК СебестоимостьТовараОстатки
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура,
	|	СебестоимостьТовараОстатки.Партия.МоментВремени";	
	
	ТаблицаОстатков = Запрос.Выполнить().Выгрузить();
	РезультатВыборкиПоРегистраторам = РезультатПоРегистраторам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока РезультатВыборкиПоРегистраторам.Следующий() Цикл 
		
		НаборЗаписейДляИзменения = РегистрыНакопления.СебестоимостьТовара.СоздатьНаборЗаписей();
		НаборЗаписейДляИзменения.Отбор.Регистратор.Значение = РезультатВыборкиПоРегистраторам.Регистратор;
		НаборЗаписейДляИзменения.Прочитать();             		

		РезультатВыборкиТоваров = РезультатВыборкиПоРегистраторам.Выбрать();
		
		МассивСтрокОстатковДляУдаления = Новый Массив();
		
		Пока РезультатВыборкиТоваров.Следующий() Цикл
			
			МассивОстатков = ТаблицаОстатков.НайтиСтроки(Новый Структура("Номенклатура", РезультатВыборкиТоваров.Номенклатура)); 
			ОсталосьСписать = РезультатВыборкиТоваров.Количество;
			Для Каждого СтрокаОстатка Из МассивОстатков Цикл 
				
				Если ОсталосьСписать = 0 Тогда
					Прервать;
				КонецЕсли;
				
				Списать = МИН(ОсталосьСписать, СтрокаОстатка.КоличествоОстаток);
				Если Списать = СтрокаОстатка.КоличествоОстаток Тогда
					Себестоимость = СтрокаОстатка.СтоимостьОстаток;
				Иначе
					Себестоимость = Списать / СтрокаОстатка.КоличествоОстаток * СтрокаОстатка.СтоимостьОстаток;
				КонецЕсли; 
				
				НоваяЗапись = НаборЗаписейДляИзменения.Добавить();
				НоваяЗапись.ВидДвижения = ВидДвиженияНакопления.Расход;
				НоваяЗапись.Период = ДатаРасчета;
				НоваяЗапись.Номенклатура = РезультатВыборкиТоваров.Номенклатура;   
				НоваяЗапись.Партия = СтрокаОстатка.Партия;
				НоваяЗапись.Количество = Списать;
				НоваяЗапись.Стоимость = Себестоимость;   
				
				ОсталосьСписать = ОсталосьСписать - Списать;
				
				СтрокаОстатка.КоличествоОстаток = СтрокаОстатка.КоличествоОстаток - Списать;
				СтрокаОстатка.СтоимостьОстаток = СтрокаОстатка.СтоимостьОстаток - Себестоимость; 
				Если СтрокаОстатка.КоличествоОстаток = 0 Тогда 
					МассивСтрокОстатковДляУдаления.Добавить(СтрокаОстатка);
				КонецЕсли;
				
			КонецЦикла;       			
		
		КонецЦикла;
		
		НаборЗаписейДляИзменения.Записать();
		
		Для Каждого СтрокаДляУдаления Из МассивСтрокОстатковДляУдаления Цикл 
			ТаблицаОстатков.Удалить(СтрокаДляУдаления);
		КонецЦикла;
		
	КонецЦикла;   	
	
КонецПроцедуры



