//начало текста модуля

///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯПодготавливаюДанныеПоЭлементуСправочникаСНаименованием(Парам01,Парам02)","ЯПодготавливаюДанныеПоЭлементуСправочникаСНаименованием","Допустим я подготавливаю данные по элементу справочника ""_ДемоНоменклатура"" с наименованием ""Стул""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯПодготавливаюДанныеПоНоменклатуре()","ЯПодготавливаюДанныеПоНоменклатуре","Допустим я подготавливаю данные по номенклатуре");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ПоНоменклатуреСНаименованиемНетОстатков(Парам01)","ПоНоменклатуреСНаименованиемНетОстатков","Допустим по номенклатуре с наименованием ""Стул"" нет остатков");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯСоздаюДокументПродажиИУказываюТоварКоторогоНетВСистеме()","ЯСоздаюДокументПродажиИУказываюТоварКоторогоНетВСистеме","Когда я создаю документ продажи и указываю товар, которого нет в системе");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ДокументНеПровелся()","ДокументНеПровелся","Тогда документ не провелся");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ПоНоменклатуреСНаименованиемЕстьОстатки(Парам01)","ПоНоменклатуреСНаименованиемЕстьОстатки","Допустим по номенклатуре с наименованием ""Стул"" есть остатки");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯСоздаюДокументПродажиИУказываюТоварКоторыйЕстьВСистеме()","ЯСоздаюДокументПродажиИУказываюТоварКоторыйЕстьВСистеме","Когда я создаю документ продажи и указываю товар, который есть в системе");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры

///////////////////////////////////////////////////
&НаКлиенте
Функция ПолучитьПутьКФайлуОтносительноКаталогоFeatures(ИмяФайлаСРасширением)
	
	ПутьКФайлу = "";
	СостояниеVanessaBehavior = Ванесса.ПолучитьСостояниеVanessaBehavior();
	ПутьКТекущемуFeatureФайлу = СостояниеVanessaBehavior.ТекущаяФича.ПолныйПуть;
	ПутьКФайлу = Лев(ПутьКТекущемуFeatureФайлу, СтрНайти(ПутьКТекущемуFeatureФайлу, "features") - 1) + ИмяФайлаСРасширением;
	Возврат ПутьКФайлу;
	
КонецФункции

&НаКлиенте
Процедура ЗагрузитьFixtureИзМакета(ИмяМакета)
	
	Ванесса.ЗапретитьВыполнениеШагов();
	НачальноеИмяФайла = ПолучитьПутьКФайлуОтносительноКаталогоFeatures("tools\Выгрузка и загрузка данных XML.epf");
	Адрес = "";
	НачатьПомещениеФайла(
		Новый ОписаниеОповещения("ЗагрузитьFixtureИзМакетаЗавершение", ЭтотОбъект, ИмяМакета), 
		Адрес, 
		НачальноеИмяФайла, 
		Ложь);

КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьFixtureИзМакетаЗавершение(УдалосьПоместитьФайл, Адрес, ВыбранноеИмяФайла, ИмяМакета) Экспорт
	
	ЗагрузитьFixtureИзМакетаЗавершениеНаСервере(Адрес, ИмяМакета);
	Ванесса.ПродолжитьВыполнениеШагов();

КонецПроцедуры

&НаСервере
Процедура ЗагрузитьFixtureИзМакетаЗавершениеНаСервере(Адрес, ИмяМакета)
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла();
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(Адрес);
	ДвоичныеДанные.Записать(ИмяВременногоФайла);
	
	ВнешняяОбработка = ВнешниеОбработки.Создать(ИмяВременногоФайла, Ложь);
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла();
	Текст = РеквизитФормыВЗначение("Объект").ПолучитьМакет(ИмяМакета).ПолучитьТекст();
	
	ВременныйДокумент = Новый ТекстовыйДокумент;
	ВременныйДокумент.УстановитьТекст(Текст);
	ВременныйДокумент.Записать(ИмяВременногоФайла, КодировкаТекста.UTF8);
	
	ВнешняяОбработка.ВыполнитьЗагрузку(ИмяВременногоФайла);

КонецПроцедуры

&НаСервере
Функция утвПолучитьЭлементСправочника(Наименование)
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	_ДемоНоменклатура.Ссылка
	|ИЗ
	|	Справочник._ДемоНоменклатура КАК _ДемоНоменклатура
	|ГДЕ
	|	_ДемоНоменклатура.Наименование = &Наименование";
	
	Запрос.УстановитьПараметр("Наименование", Наименование);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	ВыборкаДетальныеЗаписи.Следующий();
	
	Возврат ВыборкаДетальныеЗаписи.Ссылка;
	
КонецФункции

&НаСервере
Процедура УдалитьДанныеПродажиИПоступленияПоНоменклатуре(Номенклатура)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОстаткиТоваров.Регистратор
	|ИЗ
	|	РегистрНакопления.ОстаткиТоваров КАК ОстаткиТоваров
	|ГДЕ
	|	ОстаткиТоваров.Номенклатура = &Номенклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиТоваров.Регистратор";
		
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда 
		Возврат;
	КонецЕсли;
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл 
		
		ЭлементОбъект = ВыборкаДетальныеЗаписи.Регистратор.ПолучитьОбъект();
		СписокТоваров = ЭлементОбъект.СписокТоваров;
		
		МассивНоменклатурыДляУдаления = СписокТоваров.НайтиСтроки(Новый Структура("Номенклатура", Номенклатура));
		КоличествоТовара = СписокТоваров.Количество();
				
		Если КоличествоТовара = МассивНоменклатурыДляУдаления.Количество() Тогда 
			ЭлементОбъект.Удалить();
		Иначе 
			
			Сч = 0;
			Пока Сч < СписокТоваров.Количество() Цикл 
				Если СписокТоваров[Сч].Номенклатура = Номенклатура Тогда
					СписокТоваров.Удалить(Сч);
				Иначе
					Сч = Сч + 1;
				КонецЕсли;
			КонецЦикла;

			ЭлементОбъект.Записать();
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры


///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//Допустим я подготавливаю данные по номенклатуре 
//@ЯПодготавливаюДанныеПоНоменклатуре()
Процедура ЯПодготавливаюДанныеПоНоменклатуре() Экспорт
	
	ЗагрузитьFixtureИзМакета("Номенклатура");
	ЗагрузитьFixtureИзМакета("Пользователи");
	
КонецПроцедуры   

&НаКлиенте
//Допустим по номенклатуре с наименованием "Стул" нет остатков
//@ПоНоменклатуреСНаименованиемНетОстатков(Парам01)
Процедура ПоНоменклатуреСНаименованиемНетОстатков(НаименованиеНоменклатуры) Экспорт
	
	Номенклатура = утвПолучитьЭлементСправочника(НаименованиеНоменклатуры);   	
	УдалитьДанныеПродажиИПоступленияПоНоменклатуре(Номенклатура);

КонецПроцедуры

&НаКлиенте
//Когда я создаю документ продажи и указываю товар, которого нет в системе
//@ЯСоздаюДокументПродажиИУказываюТоварКоторогоНетВСистеме()
Процедура ЯСоздаюДокументПродажиИУказываюТоварКоторогоНетВСистеме() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

&НаКлиенте
//Тогда документ не провелся
//@ДокументНеПровелся()
Процедура ДокументНеПровелся() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

&НаКлиенте
//Допустим по номенклатуре с наименованием "Стул" есть остатки
//@ПоНоменклатуреСНаименованиемЕстьОстатки(Парам01)
Процедура ПоНоменклатуреСНаименованиемЕстьОстатки(НаименованиеНоменклатуры) Экспорт
	
	Номенклатура = утвПолучитьЭлементСправочника(НаименованиеНоменклатуры);
	
	УдалитьДанныеПродажиИПоступленияПоНоменклатуре(Номенклатура);
	СостояниеVanessaBehavior = Ванесса.ПолучитьСостояниеVanessaBehavior();
	Если СостояниеVanessaBehavior.ТекущийСценарий.Имя = "Продажа товара, который есть в системе" Тогда
		ЗагрузитьFixtureИзМакета("ПоступлениеТовара");
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
//Когда я создаю документ продажи и указываю товар, который есть в системе
//@ЯСоздаюДокументПродажиИУказываюТоварКоторыйЕстьВСистеме()
Процедура ЯСоздаюДокументПродажиИУказываюТоварКоторыйЕстьВСистеме() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

//окончание текста модуля