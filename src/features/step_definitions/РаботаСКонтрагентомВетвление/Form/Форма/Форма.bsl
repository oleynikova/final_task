//начало текста модуля

///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯОткрываюСправочникКонтрагенты()","ЯОткрываюСправочникКонтрагенты","Допустим Я Открываю справочник Контрагенты");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции


///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры

///////////////////////////////////////////////////

// открытие справочника
&НаКлиенте
Процедура ОкноПриложенияОсновноеКнопкаКомандногоИнтерфейсаДемоКонтрагентыНажать(ИмяСправочника)
	
	ОкноПриложенияОсновное = Неопределено;
	КлиентсткиеОкнаТестируемогоПриложения = КонтекстСохраняемый.ТестовоеПриложение.ПолучитьПодчиненныеОбъекты();
	Для Каждого ТестируемоеОкно Из КлиентсткиеОкнаТестируемогоПриложения Цикл
		Если ТестируемоеОкно.Основное Тогда
			ОкноПриложенияОсновное = ТестируемоеОкно;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	ОкноПриложенияОсновноеCommandInterface = ОкноПриложенияОсновное.ПолучитьКомандныйИнтерфейс();
	КнопкаКомандногоИнтерфейсаСправочники = ОкноПриложенияОсновноеCommandInterface.НайтиОбъект(Тип("ТестируемаяКнопкаКомандногоИнтерфейса"), "Справочники");
	КнопкаКомандногоИнтерфейсаСправочники.Нажать();

	КнопкаКомандногоИнтерфейсаДемоКонтрагенты = ОкноПриложенияОсновноеCommandInterface.НайтиОбъект(Тип("ТестируемаяКнопкаКомандногоИнтерфейса"), ИмяСправочника);
	КнопкаКомандногоИнтерфейсаДемоКонтрагенты.Нажать();

КонецПроцедуры

// количество элементов
&НаКлиенте
Функция КоличествоЭлементовВСправочникеСНаименованием(ИмяСправочника, ИскомоеНаименование)
	
	КоличествоЭлементов = 0;

	ОкноПриложенияДемоКонтрагентыКнопкаНайтиНажать(ИмяСправочника);
	ОкноПриложенияНайтиКнопкаНайтиНажать(ИскомоеНаименование);
	ОкноПриложенияДемоКонтрагентыТаблицаСписокВыделитьВсеСтроки(ИмяСправочника, КоличествоЭлементов);

   Возврат КоличествоЭлементов;
   
КонецФункции

&НаКлиенте
Процедура ОкноПриложенияДемоКонтрагентыКнопкаНайтиНажать(ИмяСправочника)

	ОкноПриложенияДемоКонтрагенты = КонтекстСохраняемый.ТестовоеПриложение.НайтиОбъект(Тип("ТестируемоеОкноКлиентскогоПриложения"), ИмяСправочника, , 30);
	ОкноПриложенияДемоКонтрагентыФормаДемоКонтрагенты = ОкноПриложенияДемоКонтрагенты.НайтиОбъект(Тип("ТестируемаяФорма"), ИмяСправочника);
	КнопкаНайти = ОкноПриложенияДемоКонтрагентыФормаДемоКонтрагенты.НайтиОбъект(Тип("ТестируемаяКнопкаФормы"), "Найти...", "ФормаНайти");
	КнопкаНайти.Нажать();

КонецПроцедуры

&НаКлиенте
Процедура ОкноПриложенияНайтиКнопкаНайтиНажать(ИскомоеНаименование)

	ОкноПриложенияНайти = КонтекстСохраняемый.ТестовоеПриложение.НайтиОбъект(Тип("ТестируемоеОкноКлиентскогоПриложения"), "Найти", , 30);
	ОкноПриложенияНайтиФормаНайти = ОкноПриложенияНайти.НайтиОбъект(Тип("ТестируемаяФорма"), "Найти");
	ПолеЧтоИскать = ОкноПриложенияНайтиФормаНайти.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "&Что искать", "Pattern");
	ПолеЧтоИскать.ВвестиТекст(ИскомоеНаименование);

	ПолеКакИскать = ОкноПриложенияНайтиФормаНайти.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Как искать", "CompareType");
	ПолеКакИскать.Активизировать();

	КнопкаНайти = ОкноПриложенияНайтиФормаНайти.НайтиОбъект(Тип("ТестируемаяКнопкаФормы"), "&Найти", "Find");
	КнопкаНайти.Нажать();

КонецПроцедуры

&НаКлиенте
Процедура ОкноПриложенияДемоКонтрагентыТаблицаСписокВыделитьВсеСтроки(ИмяСправочника, КоличествоЭлементов)

	ОкноПриложенияДемоКонтрагенты = КонтекстСохраняемый.ТестовоеПриложение.НайтиОбъект(Тип("ТестируемоеОкноКлиентскогоПриложения"), ИмяСправочника, , 30);
	ОкноПриложенияДемоКонтрагентыФормаДемоКонтрагенты = ОкноПриложенияДемоКонтрагенты.НайтиОбъект(Тип("ТестируемаяФорма"), ИмяСправочника);
	ТаблицаСписок = ОкноПриложенияДемоКонтрагентыФормаДемоКонтрагенты.НайтиОбъект(Тип("ТестируемаяТаблицаФормы"), "Список", "Список");
	ТаблицаСписок.ВыделитьВсеСтроки();
	КоличествоЭлементов = ТаблицаСписок.ПолучитьВыделенныеСтроки().Количество();

КонецПроцедуры

// создание элемента
&НаКлиенте
Процедура СоздатьЭлементСправочникаСНаименованием(ИмяСправочника, ИскомоеНаименование, ИмяФормыНовогоЭлемента)

	ОкноПриложенияДемоКонтрагентыКнопкаСоздатьНажать(ИмяСправочника);
	ОкноПриложенияДемоКонтрагентСозданиеКнопкаЗаписатьИЗакрытьНажать(ИскомоеНаименование, ИмяФормыНовогоЭлемента);

КонецПроцедуры

&НаКлиенте
Процедура ОкноПриложенияДемоКонтрагентыКнопкаСоздатьНажать(ИмяСправочника)
	ОкноПриложенияДемоКонтрагенты = КонтекстСохраняемый.ТестовоеПриложение.НайтиОбъект(Тип("ТестируемоеОкноКлиентскогоПриложения"), ИмяСправочника, , 30);
	ОкноПриложенияДемоКонтрагентыФормаДемоКонтрагенты = ОкноПриложенияДемоКонтрагенты.НайтиОбъект(Тип("ТестируемаяФорма"), ИмяСправочника);
	КнопкаСоздать = ОкноПриложенияДемоКонтрагентыФормаДемоКонтрагенты.НайтиОбъект(Тип("ТестируемаяКнопкаФормы"), "Создать", "ФормаСоздать");
	КнопкаСоздать.Нажать();

КонецПроцедуры

&НаКлиенте
Процедура ОкноПриложенияДемоКонтрагентСозданиеКнопкаЗаписатьИЗакрытьНажать(ИскомоеНаименование, ИмяФормыНовогоЭлемента)

	ОкноПриложенияДемоКонтрагентСоздание = КонтекстСохраняемый.ТестовоеПриложение.НайтиОбъект(Тип("ТестируемоеОкноКлиентскогоПриложения"), ИмяФормыНовогоЭлемента, , 30);
	ОкноПриложенияДемоКонтрагентСозданиеФормаДемоКонтрагентСоздание = ОкноПриложенияДемоКонтрагентСоздание.НайтиОбъект(Тип("ТестируемаяФорма"), ИмяФормыНовогоЭлемента);
	ПолеНаименование = ОкноПриложенияДемоКонтрагентСозданиеФормаДемоКонтрагентСоздание.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Наименование", "Наименование");
	ПолеНаименование.Активизировать();

	ПолеНаименование.ВвестиТекст(ИскомоеНаименование);

	КнопкаЗаписатьИЗакрыть = ОкноПриложенияДемоКонтрагентСозданиеФормаДемоКонтрагентСоздание.НайтиОбъект(Тип("ТестируемаяКнопкаФормы"), "Записать и закрыть", "ФормаЗаписатьИЗакрыть");
	КнопкаЗаписатьИЗакрыть.Нажать();

КонецПроцедуры

// переименование элементов
&НаКлиенте
Процедура ПереименовываемЭлементСправочника(ИмяСправочника, ИскомоеНаименование, НовоеНаименование, ИмяФормыДляИзменяемогоЭлемента, КоличествоЭлементов)

	ОписаниеСтроки = Новый Соответствие();
	ОписаниеСтроки.Вставить("Наименование", ИскомоеНаименование);

	Для Сч = 1 По КоличествоЭлементов Цикл 
		ОкноПриложенияДемоКонтрагентыТаблицаСписокВыбрать(ИмяСправочника, ИскомоеНаименование, ОписаниеСтроки);
		ОкноПриложенияКонтрагентДемоКонтрагентКнопкаЗаписатьИЗакрытьНажать(ИмяСправочника, ИскомоеНаименование, НовоеНаименование, ИмяФормыДляИзменяемогоЭлемента);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОкноПриложенияДемоКонтрагентыТаблицаСписокВыбрать(ИмяСправочника, ИскомоеНаименование, ОписаниеСтроки)
	
	ОкноПриложенияДемоКонтрагенты = КонтекстСохраняемый.ТестовоеПриложение.НайтиОбъект(Тип("ТестируемоеОкноКлиентскогоПриложения"), ИмяСправочника, , 30);
	ОкноПриложенияДемоКонтрагентыФормаДемоКонтрагенты = ОкноПриложенияДемоКонтрагенты.НайтиОбъект(Тип("ТестируемаяФорма"), ИмяСправочника);
	ТаблицаСписок = ОкноПриложенияДемоКонтрагентыФормаДемоКонтрагенты.НайтиОбъект(Тип("ТестируемаяТаблицаФормы"), "Список", "Список");
	ТаблицаСписок.ПерейтиКСтроке(ОписаниеСтроки);

	ТаблицаСписок.Выбрать();

КонецПроцедуры

&НаКлиенте
Процедура ОкноПриложенияКонтрагентДемоКонтрагентКнопкаЗаписатьИЗакрытьНажать(ИмяСправочника, ИскомоеНаименование, НовоеНаименование, ИмяФормыДляИзменяемогоЭлемента)

	ИмяФормыИзменяемогоЭлемента = ИскомоеНаименование + " " + ИмяФормыДляИзменяемогоЭлемента;
	
	ОкноПриложенияКонтрагент2ДемоКонтрагент = КонтекстСохраняемый.ТестовоеПриложение.НайтиОбъект(Тип("ТестируемоеОкноКлиентскогоПриложения"), ИмяФормыИзменяемогоЭлемента, , 30);
	ОкноПриложенияКонтрагент2ДемоКонтрагентФормаКонтрагент2ДемоКонтрагент = ОкноПриложенияКонтрагент2ДемоКонтрагент.НайтиОбъект(Тип("ТестируемаяФорма"), ИмяФормыИзменяемогоЭлемента);
	ПолеНаименование = ОкноПриложенияКонтрагент2ДемоКонтрагентФормаКонтрагент2ДемоКонтрагент.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Наименование", "Наименование");
	ПолеНаименование.ВвестиТекст(НовоеНаименование);

	КнопкаЗаписатьИЗакрыть = ОкноПриложенияКонтрагент2ДемоКонтрагентФормаКонтрагент2ДемоКонтрагент.НайтиОбъект(Тип("ТестируемаяКнопкаФормы"), "Записать и закрыть", "ФормаЗаписатьИЗакрыть");
	КнопкаЗаписатьИЗакрыть.Нажать();

КонецПроцедуры

&НаКлиенте
Процедура ОкноПриложенияДемоКонтрагентыКнопкаОтменитьПоискНажать(ИмяСправочника)
	
	ОкноПриложенияДемоКонтрагенты = КонтекстСохраняемый.ТестовоеПриложение.НайтиОбъект(Тип("ТестируемоеОкноКлиентскогоПриложения"), ИмяСправочника, , 30);
	ОкноПриложенияДемоКонтрагентыФормаДемоКонтрагенты = ОкноПриложенияДемоКонтрагенты.НайтиОбъект(Тип("ТестируемаяФорма"), ИмяСправочника);
	КнопкаОтменитьПоиск = ОкноПриложенияДемоКонтрагентыФормаДемоКонтрагенты.НайтиОбъект(Тип("ТестируемаяКнопкаФормы"), "Отменить поиск", "ФормаОтменитьПоиск");
	КнопкаОтменитьПоиск.Нажать();

КонецПроцедуры

// удаление элементов
&НаКлиенте
Процедура УдалитьЭлементыВСправочникеСНаименованием(ИмяСправочника, НаименованиеЭлемента, КоличествоЭлементов)

	Для Сч = 1 По КоличествоЭлементов Цикл
		ОкноПриложенияДемоКонтрагентыТаблицаСписокПереключитьПометкуУдаленияСтроки(ИмяСправочника, НаименованиеЭлемента);
		ОкноПриложения1СПредприятиеКнопкаДаНажать();
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОкноПриложенияДемоКонтрагентыКнопкаНастроитьСписокНажать(ИмяСправочника)
	
	ОкноПриложенияДемоКонтрагенты = КонтекстСохраняемый.ТестовоеПриложение.НайтиОбъект(Тип("ТестируемоеОкноКлиентскогоПриложения"), ИмяСправочника, , 30);
	ОкноПриложенияДемоКонтрагентыФормаДемоКонтрагенты = ОкноПриложенияДемоКонтрагенты.НайтиОбъект(Тип("ТестируемаяФорма"), ИмяСправочника);
	КнопкаНастроитьСписок = ОкноПриложенияДемоКонтрагентыФормаДемоКонтрагенты.НайтиОбъект(Тип("ТестируемаяКнопкаФормы"), "Настроить список...", "ФормаНастройкаСписка");
	КнопкаНастроитьСписок.Нажать();

КонецПроцедуры

&НаКлиенте
Процедура ОкноПриложенияНастройкаСпискаКнопкаЗавершитьРедактированиеНажать()

	ОкноПриложенияНастройкаСписка = КонтекстСохраняемый.ТестовоеПриложение.НайтиОбъект(Тип("ТестируемоеОкноКлиентскогоПриложения"), "Настройка списка", , 30);
	ОкноПриложенияНастройкаСпискаФормаНастройкаСписка = ОкноПриложенияНастройкаСписка.НайтиОбъект(Тип("ТестируемаяФорма"), "Настройка списка");
	ГруппаПользовательскиеНастройки = ОкноПриложенияНастройкаСпискаФормаНастройкаСписка.НайтиОбъект(Тип("ТестируемаяГруппаФормы"), "Пользовательские настройки", "КомпоновщикНастроекПользовательскиеНастройки");
	ГруппаОтбор = ОкноПриложенияНастройкаСпискаФормаНастройкаСписка.НайтиОбъект(Тип("ТестируемаяГруппаФормы"), "Отбор", "КомпоновщикНастроекПользовательскиеНастройкиЭлемент0");
	ГруппаОтбор.Активизировать();

	ГруппаПользовательскиеНастройки.Активизировать();

	ТаблицаДоступныеПоля = ОкноПриложенияНастройкаСпискаФормаНастройкаСписка.НайтиОбъект(Тип("ТестируемаяТаблицаФормы"), "Доступные поля", "КомпоновщикНастроекПользовательскиеНастройкиЭлемент0ДоступныеПоляТаблица");
	ТаблицаДоступныеПоля.Активизировать();

	КнопкаСнятьПометки = ОкноПриложенияНастройкаСпискаФормаНастройкаСписка.НайтиОбъект(Тип("ТестируемаяКнопкаФормы"), "Снять пометки", "КомпоновщикНастроекПользовательскиеНастройкиЭлемент0ОтборСнятьФлажки");
	КнопкаСнятьПометки.Нажать();

	ТаблицаДоступныеПоля = ОкноПриложенияНастройкаСпискаФормаНастройкаСписка.НайтиОбъект(Тип("ТестируемаяТаблицаФормы"), "Доступные поля", "КомпоновщикНастроекПользовательскиеНастройкиЭлемент0ДоступныеПоляТаблица");
	ОписаниеСтроки = Новый Соответствие();
	ОписаниеСтроки.Вставить("Доступные поля", "Пометка удаления");
	ТаблицаДоступныеПоля.ПерейтиКСтроке(ОписаниеСтроки, НаправлениеПереходаКСтроке.Вниз);

	ОписаниеСтроки = Новый Соответствие();
	ТаблицаДоступныеПоля.ПерейтиКСтроке(ОписаниеСтроки);

	ТаблицаДоступныеПоля.Выбрать();

	ТаблицаОтборЭлементы = ОкноПриложенияНастройкаСпискаФормаНастройкаСписка.НайтиОбъект(Тип("ТестируемаяТаблицаФормы"), "Отбор. Элементы", "КомпоновщикНастроекПользовательскиеНастройкиЭлемент0Отбор");
	ТаблицаОтборЭлементы.Активизировать();

	КнопкаЗавершитьРедактирование = ОкноПриложенияНастройкаСпискаФормаНастройкаСписка.НайтиОбъект(Тип("ТестируемаяКнопкаФормы"), "Завершить редактирование", "ФормаЗакончитьРедактирование");
	КнопкаЗавершитьРедактирование.Нажать();

КонецПроцедуры

&НаКлиенте
Процедура ОкноПриложенияДемоКонтрагентыТаблицаСписокПереключитьПометкуУдаленияСтроки(ИмяСправочника, НаименованиеЭлемента)
	
	ОкноПриложенияДемоКонтрагенты = КонтекстСохраняемый.ТестовоеПриложение.НайтиОбъект(Тип("ТестируемоеОкноКлиентскогоПриложения"), ИмяСправочника, , 30);
	ОкноПриложенияДемоКонтрагентыФормаДемоКонтрагенты = ОкноПриложенияДемоКонтрагенты.НайтиОбъект(Тип("ТестируемаяФорма"), ИмяСправочника);
	ТаблицаСписок = ОкноПриложенияДемоКонтрагентыФормаДемоКонтрагенты.НайтиОбъект(Тип("ТестируемаяТаблицаФормы"), "Список", "Список");
	ОписаниеСтроки = Новый Соответствие();
	ОписаниеСтроки.Вставить("Наименование", НаименованиеЭлемента);

	ЕстьЭлемент = ТаблицаСписок.ПерейтиКСтроке(ОписаниеСтроки, НаправлениеПереходаКСтроке.Вниз);

	ТаблицаСписок.ПереключитьПометкуУдаленияСтроки();

КонецПроцедуры

&НаКлиенте
Процедура ОкноПриложения1СПредприятиеКнопкаДаНажать()

	ОкноПриложения1СПредприятие = КонтекстСохраняемый.ТестовоеПриложение.НайтиОбъект(Тип("ТестируемоеОкноКлиентскогоПриложения"), "1С:Предприятие", , 30);
	ОкноПриложения1СПредприятиеФорма1СПредприятие = ОкноПриложения1СПредприятие.НайтиОбъект(Тип("ТестируемаяФорма"), "1С:Предприятие");
	КнопкаДа = ОкноПриложения1СПредприятиеФорма1СПредприятие.НайтиОбъект(Тип("ТестируемаяКнопкаФормы"), "Да");
	КнопкаДа.Нажать();

КонецПроцедуры

///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//Допустим Я Открываю справочник Контрагенты
//@ЯОткрываюСправочникКонтрагенты()
Процедура ЯОткрываюСправочникКонтрагенты() Экспорт
	
	ИскомоеНаименование = "контрагент2";
	ИмяСправочника = "Демо: Контрагенты";
	
	ОкноПриложенияОсновноеКнопкаКомандногоИнтерфейсаДемоКонтрагентыНажать(ИмяСправочника);

	КоличествоЭлементов = КоличествоЭлементовВСправочникеСНаименованием(ИмяСправочника, ИскомоеНаименование);
	
	Если КоличествоЭлементов = 0 Тогда
		ИмяФормыНовогоЭлемента = "Демо: Контрагент (создание)";
		СоздатьЭлементСправочникаСНаименованием(ИмяСправочника, ИскомоеНаименование, ИмяФормыНовогоЭлемента);
	Иначе
		НовоеНаименование = "контрагент1";
		ИмяФормыДляИзменяемогоЭлемента = "(Демо: Контрагент)";

		ПереименовываемЭлементСправочника(ИмяСправочника, ИскомоеНаименование, НовоеНаименование, ИмяФормыДляИзменяемогоЭлемента, КоличествоЭлементов);
		
		ОкноПриложенияДемоКонтрагентыКнопкаОтменитьПоискНажать(ИмяСправочника);
		ОкноПриложенияДемоКонтрагентыКнопкаНастроитьСписокНажать(ИмяСправочника);
		ОкноПриложенияНастройкаСпискаКнопкаЗавершитьРедактированиеНажать();
		
		КоличествоЭлементов = КоличествоЭлементовВСправочникеСНаименованием(ИмяСправочника, НовоеНаименование);
		Если КоличествоЭлементов > 3 Тогда 
			УдалитьЭлементыВСправочникеСНаименованием(ИмяСправочника, НовоеНаименование, КоличествоЭлементов);			
		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

//окончание текста модуля
