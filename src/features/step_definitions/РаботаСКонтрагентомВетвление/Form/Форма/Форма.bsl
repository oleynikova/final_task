//начало текста модуля

///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯОткрываюСправочникКонтрагенты()","ЯОткрываюСправочникКонтрагенты","Допустим Я Открываю справочник Контрагенты");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры

///////////////////////////////////////////////////
&НаСервере
// Служебная функция.
Функция ПолучитьЭлементСправочникаКонтрагенты(Наименование)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	_ДемоКонтрагенты.Ссылка КАК Ссылка,
	               |	_ДемоКонтрагенты.Код
	               |ИЗ
	               |	Справочник._ДемоКонтрагенты КАК _ДемоКонтрагенты
	               |ГДЕ
	               |	_ДемоКонтрагенты.Наименование = &Наименование";
	Запрос.УстановитьПараметр("Наименование", Наименование);
	
	РезультатВыполненияЗапроса = Запрос.Выполнить();
	Если РезультатВыполненияЗапроса.Пустой() Тогда 
		Возврат Неопределено;
	Иначе
		Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Функция ПолучитьАктивноеОкноИзТестовоеПриложение()
	Возврат КонтекстСохраняемый.ТестовоеПриложение.ПолучитьАктивноеОкно();
КонецФункции

&НаКлиенте
Функция ПолучитьАктивноеОкноИзКонтекста()
	Возврат Контекст.АктивноеОкно;
КонецФункции

&НаКлиенте
Функция НайтиФормыТекущегоОкна()
	ОкноПриложения         = ПолучитьАктивноеОкноИзТестовоеПриложение();
	МассивФорм             = ОкноПриложения.НайтиОбъекты(Тип("ТестируемаяФорма"));
	Возврат МассивФорм;
КонецФункции	

&НаКлиенте
Функция НайтиТекущуюФорму()
	Получилось = Истина;
	Попытка
		ОкноПриложения         = ПолучитьАктивноеОкноИзКонтекста();
		ТекущаяФорма           = ОкноПриложения.НайтиОбъект(Тип("ТестируемаяФорма"));
	Исключение
		Получилось = Ложь;	
	КонецПопытки;
	
	Если Не Получилось Тогда
		ОкноПриложения         = ПолучитьАктивноеОкноИзТестовоеПриложение();
		ТекущаяФорма           = ОкноПриложения.НайтиОбъект(Тип("ТестируемаяФорма"));
		Контекст.Вставить("АктивноеОкно",ОкноПриложения); //произошла неявная смена активного окна
	КонецЕсли;	 
	
	Возврат ТекущаяФорма;
КонецФункции

&НаКлиенте
Процедура СделатьДействияПриЗаписиВидео(ПарамСтр = "")
	Ванесса.СделатьДействияПриЗаписиВидео(ПарамСтр);
КонецПроцедуры

&НаКлиенте
Процедура СделатьДействияПриЗаписиHTML(ПарамСтр = "")
	Ванесса.СделатьДействияПриЗаписиHTML(ПарамСтр);
КонецПроцедуры

&НаКлиенте
Функция АктивизироватьКнопку(Кнопка,ТекущаяФорма = Неопределено,ТЧ = Неопределено)
	ПолучилосьАктивизировать = Ложь;
	Если Кнопка.Вид = ВидКнопкиФормы.КнопкаКоманднойПанели Тогда
		Попытка
			//в 8.3.7 эта строка вызывает проблему для кнопок диалогов
			Если ТЧ <> Неопределено Тогда
				КоманднаяПанельФормы = ТЧ.ПолучитьКоманднуюПанель();
			Иначе	
				КоманднаяПанельФормы = ТекущаяФорма.ПолучитьКоманднуюПанель();
			КонецЕсли;	 
			
			Если КоманднаяПанельФормы <> Неопределено Тогда
				КоманднаяПанельФормы.Активизировать();
				ПолучилосьАктивизировать = Истина;
			КонецЕсли;	 
		Исключение
		
		КонецПопытки;
	Иначе	
		Кнопка.Активизировать();
		ПолучилосьАктивизировать = Истина;
	КонецЕсли;	 
	
	Возврат ПолучилосьАктивизировать;
КонецФункции

&НаКлиенте
//В открытой форме я нажимаю на кнопку с заголовком "Записать и закрыть"
//@ВОткрытойФормеЯНажимаюНаКнопкуСЗаголовком(Парам01)
Процедура ВОткрытойФормеЯНажимаюНаКнопкуСЗаголовком(ИмяКнопки,ИскатьПоИмени = Ложь) Экспорт

	Нашли = Ложь;
	МассивФорм = НайтиФормыТекущегоОкна();
	Для каждого ТекущаяФорма Из МассивФорм Цикл
		//Сообщить("" + ТекущаяФорма.ТекстЗаголовка);
		
		Если ИскатьПоИмени Тогда
			Кнопка       = ТекущаяФорма.НайтиОбъект(Тип("ТестируемаяКнопкаФормы"),,ИмяКнопки);
		Иначе	
			Кнопка       = ТекущаяФорма.НайтиОбъект(Тип("ТестируемаяКнопкаФормы"),ИмяКнопки);
		КонецЕсли;	 
		
		Если Кнопка = Неопределено Тогда
			Продолжить;
		КонецЕсли;	 
		
		Нашли = Истина;
		
		Прервать;
	КонецЦикла;
	
	
	Если НЕ Нашли Тогда //для модальных диалогов
		ТекущаяФорма = НайтиТекущуюФорму();
		
		Если ИскатьПоИмени Тогда
			Кнопка       = ТекущаяФорма.НайтиОбъект(Тип("ТестируемаяКнопкаФормы"),,ИмяКнопки);
		Иначе	
			Кнопка       = ТекущаяФорма.НайтиОбъект(Тип("ТестируемаяКнопкаФормы"),ИмяКнопки);
		КонецЕсли;	 
		
		Если Кнопка <> Неопределено Тогда
			Нашли = Истина;
		КонецЕсли;	 
		
	КонецЕсли;	 
	
	
	Если НЕ Нашли Тогда
		Если ИскатьПоИмени Тогда
			Стр = "Кнопка с именем <" + ИмяКнопки + "> не найдена!";
		Иначе	
			Стр = "Кнопка с заголовком <" + ИмяКнопки + "> не найдена!";
		КонецЕсли;	 
		
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;	 
	
	
	ПолучилосьАктивизировать = АктивизироватьКнопку(Кнопка,ТекущаяФорма);
	
	Если ПолучилосьАктивизировать Тогда
		СделатьДействияПриЗаписиВидео();
		СделатьДействияПриЗаписиHTML();
	КонецЕсли;	 
	
	
	Кнопка.Нажать();
	
КонецПроцедуры

&НаКлиенте
//В открытой форме в поле с заголовком "Реквизит строка" я ввожу текст "тест"
//@ВОткрытойФормеВПолеСЗаголовкомЯВвожуТекст(Парам01,Парам02)
Процедура ВОткрытойФормеВПолеСЗаголовкомЯВвожуТекст(ИмяРеквизита,Текст,ИскатьПоИмени = Ложь) Экспорт

	
	Нашли = Ложь;
	МассивФорм = НайтиФормыТекущегоОкна();
	Для каждого ТекущаяФорма Из МассивФорм Цикл
		Если ИскатьПоИмени Тогда
			МассивЭлементов        = ТекущаяФорма.НайтиОбъекты(Тип("ТестируемоеПолеФормы"),, ИмяРеквизита);
		Иначе
			МассивЭлементов        = ТекущаяФорма.НайтиОбъекты(Тип("ТестируемоеПолеФормы"), ИмяРеквизита);
		КонецЕсли;	 
		
		Если МассивЭлементов = Неопределено Тогда
			Продолжить;
			//Стр = "Элемента формы с заголовком <" + ИмяРеквизита + "> не найдено.";
			//Сообщить(Стр);
			//ВызватьИсключение Стр;
		КонецЕсли;	 
		
		Если МассивЭлементов.Количество() = 0 Тогда
			Продолжить;
			//Стр = "Элемента формы с заголовком <" + ИмяРеквизита + "> не найдено.";
			//Сообщить(Стр);
			//ВызватьИсключение Стр;
		КонецЕсли;	 
		
		Если МассивЭлементов.Количество() > 1  Тогда
			Сообщить("Обнаружено несколько полей с заголовком <" + ИмяРеквизита + ">");
			Ном = 0;
			Для каждого Элем Из МассивЭлементов Цикл
				Ном = Ном + 1;
				Сообщить("№" + Ном + ". Заголовок=<" + Элем.ТекстЗаголовка  + ">. Имя=<" + Элем.Имя + ">. ТекстПоля = <" + Элем.ПолучитьПредставлениеДанных() + ">");
			КонецЦикла;
			
			Стр = "Найдено более одного поля формы с заголовком <" + ИмяРеквизита + ">. Рекомендуется искать элемент по имени.";
			Сообщить(Стр);
			ВызватьИсключение Стр;
		КонецЕсли;	 
		
		ПолеРеквизит = МассивЭлементов[0];
		
		
		ПолеРеквизит.Активизировать();
		
		
		СделатьДействияПриЗаписиВидео();
		ПолеРеквизит.ВвестиТекст(Текст);
		СделатьДействияПриЗаписиHTML();
		
		
		Нашли = Истина;
		Прервать;
	КонецЦикла;
	
	Если НЕ Нашли Тогда
		Если ИскатьПоИмени Тогда
			Стр = "Элемента формы с именем <" + ИмяРеквизита + "> не найдено.";
		Иначе	
			Стр = "Элемента формы с заголовком <" + ИмяРеквизита + "> не найдено.";
		КонецЕсли;	 
		
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;	 
	
КонецПроцедуры

&НаКлиенте
Функция НайтиТЧПоИмени(ИмяТЧ)
	Получилось = Ложь;
	Если Не Получилось Тогда
		ОкноПриложения         = ПолучитьАктивноеОкноИзТестовоеПриложение();
		НужнаяФорма           = ОкноПриложения.НайтиОбъект(Тип("ТестируемаяФорма"));
		
		Если НужнаяФорма = Неопределено Тогда
			//иногда 1С некорректно отдаёт текущее окно, тогда будем искать во всех окнах
			//сначала поищем в недавно открытом окне
			
			Попытка
				ОкноПриложения = ПолучитьАктивноеОкноИзКонтекста();
				НужнаяФорма    = ОкноПриложения.НайтиОбъект(Тип("ТестируемаяФорма"));
			Исключение
				
			КонецПопытки;
			
			//Если НужнаяФорма = Неопределено Тогда
			//	//затем будем искать во всех окнах
			//	МассивОкон = КонтекстСохраняемый.ТестовоеПриложение.НайтиОбъекты(Тип("ТестируемоеОкноКлиентскогоПриложения"));
			//	Для каждого ТекОкно Из МассивОкон Цикл
			//		
			//		НужнаяФорма    = ТекОкно.НайтиОбъект(Тип("ТестируемаяФорма"));
			//		Если НужнаяФорма <> Неопределено Тогда
			//			Контекст.Вставить("АктивноеОкно",ОкноПриложения); //произошла неявная смена активного окна
			//		КонецЕсли;	 
			//		
			//	КонецЦикла;
			//	
			//КонецЕсли;	 
		КонецЕсли;	 
		
		
		Если ИмяТЧ = "" Тогда
			ТЧ                     = НужнаяФорма.НайтиОбъект(Тип("ТестируемаяТаблицаФормы"));
		Иначе	
			ТЧ                     = НужнаяФорма.НайтиОбъект(Тип("ТестируемаяТаблицаФормы"),,ИмяТЧ);
		КонецЕсли;	 
		
	КонецЕсли;	 
	
	Возврат ТЧ;
КонецФункции	

&НаКлиенте
//И     В открытой форме в ТЧ "Отборы" я активизирую поле "Условие"
//@ВОткрытойФормеВТЧЯАктивизируюПоле(Парам01,Парам02)
Процедура ВОткрытойФормеВТЧЯАктивизируюПоле(ИмяТЧ,ИмяРеквизита,ИскатьПоИмени = Ложь) Экспорт
	ТЧ                     =  НайтиТЧПоИмени(ИмяТЧ);
	
	Если ИскатьПоИмени Тогда
		ПолеРеквизит           = ТЧ.НайтиОбъект(Тип("ТестируемоеПолеФормы"),, ИмяРеквизита);
	Иначе	
		ПолеРеквизит           = ТЧ.НайтиОбъект(Тип("ТестируемоеПолеФормы"), ИмяРеквизита);
	КонецЕсли;	 
	
	Если ПолеРеквизит = Неопределено Тогда
		Если ИскатьПоИмени Тогда
			Стр = "В ТЧ <" +ИмяТЧ  + "> поле с именем <" + ИмяРеквизита + "> не найдено!";
		Иначе	
			Стр = "В ТЧ <" +ИмяТЧ  + "> поле с заголовком <" + ИмяРеквизита + "> не найдено!";
		КонецЕсли;	 
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;	 
	
	ПолеРеквизит.Активизировать();
	СделатьДействияПриЗаписиВидео();
	СделатьДействияПриЗаписиHTML();
КонецПроцедуры

&НаКлиенте
Функция СделатьПереход(ТаблицаСписок,ОписаниеСтроки,ОшибкаПереходВниз,ОшибкаПереходВверх)
	ПолучилосьПерейти = Ложь;
	Попытка
		ТаблицаСписок.ПерейтиКСтроке(ОписаниеСтроки, Вычислить("НаправлениеПереходаКСтроке.Вниз"));
		ПолучилосьПерейти = Истина;
	Исключение
		ОшибкаПереходВниз = ОписаниеОшибки();
		//Сообщить("" + ОписаниеОшибки());
	КонецПопытки;
	
	
	Если НЕ ПолучилосьПерейти Тогда
		Попытка
			ТаблицаСписок.ПерейтиКСтроке(ОписаниеСтроки, Вычислить("НаправлениеПереходаКСтроке.Вверх"));
			ПолучилосьПерейти = Истина;
		Исключение
			ОшибкаПереходВверх = ОписаниеОшибки();
			//Сообщить("" + ОписаниеОшибки());
		КонецПопытки;
	КонецЕсли;	
	
	Возврат ПолучилосьПерейти;
КонецФункции	


&НаКлиенте
Функция ПолучитьОшибкуПерехода(ИмяТЧ,ОшибкаПереходВниз,ОшибкаПереходВверх)
	Стр = "Не удалось перейти к нужной строке в таблице <" + ИмяТЧ + ">";
	Сообщить(Стр);
	Если ОшибкаПереходВниз <> "" Тогда
		Сообщить("" + ОшибкаПереходВниз);
	КонецЕсли;	 
	Если ОшибкаПереходВверх <> "" Тогда
		Сообщить("" + ОшибкаПереходВверх);
	КонецЕсли;	 
	
	Возврат Стр;
КонецФункции	

&НаКлиенте
Функция НайтиФормуПоЗаголовку(ИмяФормы)
	ОкноПриложения = ПолучитьАктивноеОкноИзТестовоеПриложение();
	НужнаяФорма    = ОкноПриложения.НайтиОбъект(Тип("ТестируемаяФорма"), ИмяФормы);
	Если НужнаяФорма = Неопределено Тогда
		//иногда 1С некорректно отдаёт текущее окно, тогда будем искать во всех окнах
		//сначала поищем в недавно открытом окне
		
		Попытка
			ОкноПриложения = ПолучитьАктивноеОкноИзКонтекста();
			НужнаяФорма    = ОкноПриложения.НайтиОбъект(Тип("ТестируемаяФорма"), ИмяФормы);
			Если НужнаяФорма <> Неопределено Тогда
				Контекст.Вставить("АктивноеОкно",ОкноПриложения); //произошла неявная смена активного окна
				Возврат НужнаяФорма;
			КонецЕсли;	 
		Исключение
			
		КонецПопытки;
		
		
		//затем будем искать во всех окнах
		МассивОкон = КонтекстСохраняемый.ТестовоеПриложение.НайтиОбъекты(Тип("ТестируемоеОкноКлиентскогоПриложения"));
		Для каждого ТекОкно Из МассивОкон Цикл
			
			НужнаяФорма    = ТекОкно.НайтиОбъект(Тип("ТестируемаяФорма"), ИмяФормы);
			Если НужнаяФорма <> Неопределено Тогда
				Контекст.Вставить("АктивноеОкно",ТекОкно); //произошла неявная смена активного окна
				Возврат НужнаяФорма;
			КонецЕсли;	 
			
		КонецЦикла;
	КонецЕсли;	 
	
	Если НужнаяФорма = Неопределено Тогда
		Стр = "Форма с заголовком <" + ИмяФормы + "> не найдена!";
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;	 
	
	Контекст.Вставить("АктивноеОкно",ОкноПриложения); //произошла неявная смена активного окна
	Возврат НужнаяФорма;
КонецФункции	

&НаКлиенте
//В форме "Справочник1" в таблице "Список" я перехожу к строке:
//@ВФормеВТаблицеЯПерехожуКСтроке(Парам01,Парам02,ТабПарам)
Процедура ВФормеВТаблицеЯПерехожуКСтроке(ИмяФормы,ИмяТЧ,ТабПарам) Экспорт
	Ванесса.ПроверитьРавенство(ТабПарам.Количество(),2,"Строка должна быть описана таблицей с двумя строками.");
	
	НужнаяФорма = НайтиФормуПоЗаголовку(ИмяФормы);
	
	Если НужнаяФорма = Неопределено Тогда
		Если НужнаяФорма = Неопределено Тогда
			Стр = "Форма с заголовком <" + ИмяФормы + "> не найдена!";
			Сообщить(Стр);
			ВызватьИсключение Стр;
		КонецЕсли;	 
		
	КонецЕсли;	 
	
	Если ИмяТЧ = "" Тогда
		ТаблицаСписок  = НужнаяФорма.НайтиОбъект(Тип("ТестируемаяТаблицаФормы"));
	Иначе	
		ТаблицаСписок  = НужнаяФорма.НайтиОбъект(Тип("ТестируемаяТаблицаФормы"),, ИмяТЧ);
	КонецЕсли;	 
	
	
	
	Если ТаблицаСписок = Неопределено Тогда
		Стр = "На форме <" + ИмяФормы + "> не найдена таблица с именем <" + ИмяТЧ + ">";
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;	 
	
	ТаблицаСписок.Активизировать();
	
	СделатьДействияПриЗаписиВидео("толькофрейм");
	
	ОписаниеСтроки = Новый Соответствие();
	
	
	Строка1    = ТабПарам[0];
	Строка2    = ТабПарам[1];
	КолКолонок = Строка1.Количество();
	
	Для Ккк = 1 По КолКолонок Цикл
		Ключ     = Строка1["Кол"+Ккк];
		Значение = Строка2["Кол"+Ккк];
		Если ТипЗнч(Значение) = Тип("Число") Тогда
			Значение = СтрЗаменить(Значение,Символы.НПП,"");
		КонецЕсли;	 
		
		//Сообщить("" + Ключ + ":" + Значение);
		
		ОписаниеСтроки.Вставить(Ключ,Значение);
	КонецЦикла;
	
	//ОписаниеСтроки.Вставить("Код", "000000001");
	//ОписаниеСтроки.Вставить("Наименование", "Тестовый Элемент 2");
	
	ОшибкаПереходВниз  = "";
	ОшибкаПереходВверх = "";
	
	
	ПолучилосьПерейти = СделатьПереход(ТаблицаСписок,ОписаниеСтроки,ОшибкаПереходВниз,ОшибкаПереходВверх);
	Если НЕ ПолучилосьПерейти Тогда
		Попытка
			//Возможно, это  ошибка платформы. Такое бывает с таблицами значений в УФ. Смотри https://github.com/silverbulleters/vanessa-behavior/issues/342
			//Делаем обход проблемы
			ТаблицаСписок.ПерейтиКПервойСтроке();
			ПолучилосьПерейти = СделатьПереход(ТаблицаСписок,ОписаниеСтроки,ОшибкаПереходВниз,ОшибкаПереходВверх);
		Исключение
			Стр = ПолучитьОшибкуПерехода(ИмяТЧ,ОшибкаПереходВниз,ОшибкаПереходВверх);
			ВызватьИсключение Стр;
		КонецПопытки;	
	КонецЕсли;	 
	
	
	Если НЕ ПолучилосьПерейти Тогда
		Стр = ПолучитьОшибкуПерехода(ИмяТЧ,ОшибкаПереходВниз,ОшибкаПереходВверх);
		ВызватьИсключение Стр;
	КонецЕсли;	
	
	СделатьДействияПриЗаписиHTML("толькофрейм");
	
КонецПроцедуры

///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//Допустим Я Открываю справочник Контрагенты
//@ЯОткрываюСправочникКонтрагенты()
Процедура ЯОткрываюСправочникКонтрагенты() Экспорт
	
	Наименование = "контрагент2";
	МассивКонтрагент1 = ПолучитьЭлементСправочникаКонтрагенты(Наименование);
	Если МассивКонтрагент1 = Неопределено Тогда
		
		ВОткрытойФормеЯНажимаюНаКнопкуСЗаголовком("Создать");
		ВОткрытойФормеВПолеСЗаголовкомЯВвожуТекст("Наименование", "контрагент2");
		ВОткрытойФормеЯНажимаюНаКнопкуСЗаголовком("Записать и закрыть");
	Иначе
		Для Каждого Контрагент1 из МассивКонтрагент1 Цикл 
			
			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

//окончание текста модуля